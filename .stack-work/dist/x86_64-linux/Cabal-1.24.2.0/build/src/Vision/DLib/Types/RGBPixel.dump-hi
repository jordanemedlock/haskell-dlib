
==================== FINAL INTERFACE ====================
2017-06-12 20:36:12.598156 UTC

interface haskell-dlib-0.1.0.0-3fllyVSnE7s1R7uPGXF8Jy:Vision.DLib.Types.RGBPixel 8002
  interface hash: 68fcf4f659813c34039ac173854a8418
  ABI hash: bc3d04b33cc8bc94bf6a4c4dcb888527
  export-list hash: 71b4c123dac6b16435bb2061301e2bc8
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0c27dff259dcb485104767cde3c16bf8
  sig of: Nothing
  used TH splices: False
  where
exports:
  Vision.DLib.Types.RGBPixel.RGBPixel{Vision.DLib.Types.RGBPixel.RGBPixel rgbBlue rgbGreen rgbRed}
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Foreign.C.Types bf568ee9a3ec4aa42333a0da5f4345de
import  -/  base-4.9.1.0:Foreign.Ptr 436587875917047a95f3be0fc1891fc4
import  -/  base-4.9.1.0:Foreign.Storable 085c8d7f42ceec1dbb4e818f06339b9d
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Ptr 427a6ad9312f04edb98e0f5b7c4e2596
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
fa19af4dd951530d462e288714478ff7
  $fShowRGBPixel :: GHC.Show.Show Vision.DLib.Types.RGBPixel.RGBPixel
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Vision.DLib.Types.RGBPixel.RGBPixel
                  Vision.DLib.Types.RGBPixel.$fShowRGBPixel_$cshowsPrec
                  Vision.DLib.Types.RGBPixel.$fShowRGBPixel_$cshow
                  Vision.DLib.Types.RGBPixel.$fShowRGBPixel_$cshowList -}
fa19af4dd951530d462e288714478ff7
  $fShowRGBPixel1 ::
    Vision.DLib.Types.RGBPixel.RGBPixel -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Vision.DLib.Types.RGBPixel.RGBPixel)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Vision.DLib.Types.RGBPixel.RGBPixel ww1 ww2 ww3 ->
                 Vision.DLib.Types.RGBPixel.$w$cshowsPrec 0# ww1 ww2 ww3 w1 }) -}
779b0cc808e54d3dea3f59a2b3214777
  $fShowRGBPixel2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
7bd90c81b4592dba164968ac766f926d
  $fShowRGBPixel3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "rgbBlue = "#) -}
e3470c6344ac46886fa627c00e71b228
  $fShowRGBPixel4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "rgbGreen = "#) -}
91599ae2c5b798f5f0692436d25ec404
  $fShowRGBPixel5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
cbbda02ac1d184c62394bdf1a14ff73c
  $fShowRGBPixel6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "rgbRed = "#) -}
7a1bbb2f110f163976bfa1c9add4ca1f
  $fShowRGBPixel7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RGBPixel {"#) -}
fa19af4dd951530d462e288714478ff7
  $fShowRGBPixel_$cshow ::
    Vision.DLib.Types.RGBPixel.RGBPixel -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Vision.DLib.Types.RGBPixel.RGBPixel) ->
                 Vision.DLib.Types.RGBPixel.$fShowRGBPixel_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
fa19af4dd951530d462e288714478ff7
  $fShowRGBPixel_$cshowList ::
    [Vision.DLib.Types.RGBPixel.RGBPixel] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Vision.DLib.Types.RGBPixel.RGBPixel
                   Vision.DLib.Types.RGBPixel.$fShowRGBPixel1) -}
fa19af4dd951530d462e288714478ff7
  $fShowRGBPixel_$cshowsPrec ::
    GHC.Types.Int
    -> Vision.DLib.Types.RGBPixel.RGBPixel -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U(U),1*U(U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Vision.DLib.Types.RGBPixel.RGBPixel)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Vision.DLib.Types.RGBPixel.RGBPixel ww3 ww4 ww5 ->
                 Vision.DLib.Types.RGBPixel.$w$cshowsPrec ww1 ww3 ww4 ww5 w2 } }) -}
fa19af4dd951530d462e288714478ff7
  $fStorableRGBPixel ::
    Foreign.Storable.Storable Vision.DLib.Types.RGBPixel.RGBPixel
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Vision.DLib.Types.RGBPixel.RGBPixel
                  Vision.DLib.Types.RGBPixel.$fStorableRGBPixel_$csizeOf
                  Vision.DLib.Types.RGBPixel.$fStorableRGBPixel_$calignment
                  Vision.DLib.Types.RGBPixel.$fStorableRGBPixel_$cpeekElemOff
                  Vision.DLib.Types.RGBPixel.$fStorableRGBPixel_$cpokeElemOff
                  Vision.DLib.Types.RGBPixel.$fStorableRGBPixel_$cpeekByteOff
                  Vision.DLib.Types.RGBPixel.$fStorableRGBPixel_$cpokeByteOff
                  Vision.DLib.Types.RGBPixel.$fStorableRGBPixel_$cpeek
                  Vision.DLib.Types.RGBPixel.$fStorableRGBPixel_$cpoke -}
fa19af4dd951530d462e288714478ff7
  $fStorableRGBPixel1 ::
    GHC.Ptr.Ptr Vision.DLib.Types.RGBPixel.RGBPixel
    -> Vision.DLib.Types.RGBPixel.RGBPixel
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ptr :: GHC.Ptr.Ptr Vision.DLib.Types.RGBPixel.RGBPixel)
                   (ds :: Vision.DLib.Types.RGBPixel.RGBPixel)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { Vision.DLib.Types.RGBPixel.RGBPixel r g b ->
                 case ptr
                        `cast`
                      (GHC.Ptr.Ptr
                         <Vision.DLib.Types.RGBPixel.RGBPixel, GHC.Int.Int8>)_R of wild1 { GHC.Ptr.Ptr a ->
                 case r `cast`
                      (Foreign.C.Types.N:CChar[0]) of wild2 { GHC.Int.I8# x ->
                 case GHC.Prim.writeInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        0#
                        x
                        eta of s2 { DEFAULT ->
                 case g `cast`
                      (Foreign.C.Types.N:CChar[0]) of wild3 { GHC.Int.I8# x1 ->
                 case GHC.Prim.writeInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        1#
                        x1
                        s2 of s1 { DEFAULT ->
                 case b `cast`
                      (Foreign.C.Types.N:CChar[0]) of wild4 { GHC.Int.I8# x2 ->
                 case GHC.Prim.writeInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        2#
                        x2
                        s1 of s3 { DEFAULT ->
                 (# s3, GHC.Tuple.() #) } } } } } } } }) -}
fa19af4dd951530d462e288714478ff7
  $fStorableRGBPixel2 ::
    GHC.Ptr.Ptr Vision.DLib.Types.RGBPixel.RGBPixel
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Vision.DLib.Types.RGBPixel.RGBPixel #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ptr :: GHC.Ptr.Ptr Vision.DLib.Types.RGBPixel.RGBPixel)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ptr
                        `cast`
                      (GHC.Ptr.Ptr
                         <Vision.DLib.Types.RGBPixel.RGBPixel, GHC.Int.Int8>)_R of wild { GHC.Ptr.Ptr a ->
                 case GHC.Prim.readInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        0#
                        eta of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.readInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        0#
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.readInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        0#
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    Vision.DLib.Types.RGBPixel.RGBPixel
                      (GHC.Int.I8# ipv1) `cast` (Sym (Foreign.C.Types.N:CChar[0]))
                      (GHC.Int.I8# ipv3) `cast` (Sym (Foreign.C.Types.N:CChar[0]))
                      (GHC.Int.I8# ipv5)
                        `cast`
                      (Sym (Foreign.C.Types.N:CChar[0])) #) } } } }) -}
fa19af4dd951530d462e288714478ff7
  $fStorableRGBPixel3 ::
    GHC.Ptr.Ptr b
    -> GHC.Types.Int
    -> Vision.DLib.Types.RGBPixel.RGBPixel
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ b
                   (ptr :: GHC.Ptr.Ptr b)
                   (off :: GHC.Types.Int)
                   (eta :: Vision.DLib.Types.RGBPixel.RGBPixel)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case eta of wild { Vision.DLib.Types.RGBPixel.RGBPixel r g b1 ->
                 case ptr of wild1 { GHC.Ptr.Ptr addr ->
                 case off of wild2 { GHC.Types.I# d ->
                 case r `cast`
                      (Foreign.C.Types.N:CChar[0]) of wild3 { GHC.Int.I8# x ->
                 let {
                   a :: GHC.Prim.Addr# = GHC.Prim.plusAddr# addr d
                 } in
                 case GHC.Prim.writeInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        0#
                        x
                        eta1 of s2 { DEFAULT ->
                 case g `cast`
                      (Foreign.C.Types.N:CChar[0]) of wild4 { GHC.Int.I8# x1 ->
                 case GHC.Prim.writeInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        1#
                        x1
                        s2 of s1 { DEFAULT ->
                 case b1
                        `cast`
                      (Foreign.C.Types.N:CChar[0]) of wild5 { GHC.Int.I8# x2 ->
                 case GHC.Prim.writeInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        2#
                        x2
                        s1 of s3 { DEFAULT ->
                 (# s3, GHC.Tuple.() #) } } } } } } } } }) -}
fa19af4dd951530d462e288714478ff7
  $fStorableRGBPixel4 ::
    GHC.Ptr.Ptr b
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Vision.DLib.Types.RGBPixel.RGBPixel #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ b
                   (ptr :: GHC.Ptr.Ptr b)
                   (off :: GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ptr of wild { GHC.Ptr.Ptr addr ->
                 case off of wild1 { GHC.Types.I# d ->
                 let {
                   a :: GHC.Prim.Addr# = GHC.Prim.plusAddr# addr d
                 } in
                 case GHC.Prim.readInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        0#
                        eta of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.readInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        0#
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.readInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        0#
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    Vision.DLib.Types.RGBPixel.RGBPixel
                      (GHC.Int.I8# ipv1) `cast` (Sym (Foreign.C.Types.N:CChar[0]))
                      (GHC.Int.I8# ipv3) `cast` (Sym (Foreign.C.Types.N:CChar[0]))
                      (GHC.Int.I8# ipv5)
                        `cast`
                      (Sym (Foreign.C.Types.N:CChar[0])) #) } } } } }) -}
fa19af4dd951530d462e288714478ff7
  $fStorableRGBPixel5 ::
    GHC.Ptr.Ptr Vision.DLib.Types.RGBPixel.RGBPixel
    -> GHC.Types.Int
    -> Vision.DLib.Types.RGBPixel.RGBPixel
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (ptr :: GHC.Ptr.Ptr Vision.DLib.Types.RGBPixel.RGBPixel)
                   (off :: GHC.Types.Int)
                   (val :: Vision.DLib.Types.RGBPixel.RGBPixel)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case val of wild { Vision.DLib.Types.RGBPixel.RGBPixel r g b ->
                 case ptr of wild1 { GHC.Ptr.Ptr addr ->
                 case off of wild2 { GHC.Types.I# x ->
                 case r `cast`
                      (Foreign.C.Types.N:CChar[0]) of wild3 { GHC.Int.I8# x1 ->
                 let {
                   a :: GHC.Prim.Addr# = GHC.Prim.plusAddr# addr (GHC.Prim.*# x 3#)
                 } in
                 case GHC.Prim.writeInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        0#
                        x1
                        eta of s2 { DEFAULT ->
                 case g `cast`
                      (Foreign.C.Types.N:CChar[0]) of wild4 { GHC.Int.I8# x2 ->
                 case GHC.Prim.writeInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        1#
                        x2
                        s2 of s1 { DEFAULT ->
                 case b `cast`
                      (Foreign.C.Types.N:CChar[0]) of wild5 { GHC.Int.I8# x3 ->
                 case GHC.Prim.writeInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        2#
                        x3
                        s1 of s3 { DEFAULT ->
                 (# s3, GHC.Tuple.() #) } } } } } } } } }) -}
fa19af4dd951530d462e288714478ff7
  $fStorableRGBPixel6 ::
    GHC.Ptr.Ptr Vision.DLib.Types.RGBPixel.RGBPixel
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Vision.DLib.Types.RGBPixel.RGBPixel #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ptr :: GHC.Ptr.Ptr Vision.DLib.Types.RGBPixel.RGBPixel)
                   (off :: GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ptr of wild { GHC.Ptr.Ptr addr ->
                 case off of wild1 { GHC.Types.I# x ->
                 let {
                   a :: GHC.Prim.Addr# = GHC.Prim.plusAddr# addr (GHC.Prim.*# x 3#)
                 } in
                 case GHC.Prim.readInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        0#
                        eta of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.readInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        0#
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.readInt8OffAddr#
                        @ GHC.Prim.RealWorld
                        a
                        0#
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    Vision.DLib.Types.RGBPixel.RGBPixel
                      (GHC.Int.I8# ipv1) `cast` (Sym (Foreign.C.Types.N:CChar[0]))
                      (GHC.Int.I8# ipv3) `cast` (Sym (Foreign.C.Types.N:CChar[0]))
                      (GHC.Int.I8# ipv5)
                        `cast`
                      (Sym (Foreign.C.Types.N:CChar[0])) #) } } } } }) -}
1b6202783a98922e78273f3f2427cc50
  $fStorableRGBPixel7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
fa19af4dd951530d462e288714478ff7
  $fStorableRGBPixel_$calignment ::
    Vision.DLib.Types.RGBPixel.RGBPixel -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                Vision.DLib.Types.RGBPixel.$fStorableRGBPixel_$csizeOf -}
fa19af4dd951530d462e288714478ff7
  $fStorableRGBPixel_$cpeek ::
    GHC.Ptr.Ptr Vision.DLib.Types.RGBPixel.RGBPixel
    -> GHC.Types.IO Vision.DLib.Types.RGBPixel.RGBPixel
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Vision.DLib.Types.RGBPixel.$fStorableRGBPixel2
                  `cast`
                (<GHC.Ptr.Ptr Vision.DLib.Types.RGBPixel.RGBPixel>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Vision.DLib.Types.RGBPixel.RGBPixel>_R)) -}
fa19af4dd951530d462e288714478ff7
  $fStorableRGBPixel_$cpeekByteOff ::
    GHC.Ptr.Ptr b
    -> GHC.Types.Int
    -> GHC.Types.IO Vision.DLib.Types.RGBPixel.RGBPixel
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Vision.DLib.Types.RGBPixel.$fStorableRGBPixel4
                  `cast`
                (forall (b :: <*>_N).
                 <GHC.Ptr.Ptr b>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Vision.DLib.Types.RGBPixel.RGBPixel>_R)) -}
fa19af4dd951530d462e288714478ff7
  $fStorableRGBPixel_$cpeekElemOff ::
    GHC.Ptr.Ptr Vision.DLib.Types.RGBPixel.RGBPixel
    -> GHC.Types.Int
    -> GHC.Types.IO Vision.DLib.Types.RGBPixel.RGBPixel
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Vision.DLib.Types.RGBPixel.$fStorableRGBPixel6
                  `cast`
                (<GHC.Ptr.Ptr Vision.DLib.Types.RGBPixel.RGBPixel>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Vision.DLib.Types.RGBPixel.RGBPixel>_R)) -}
fa19af4dd951530d462e288714478ff7
  $fStorableRGBPixel_$cpoke ::
    GHC.Ptr.Ptr Vision.DLib.Types.RGBPixel.RGBPixel
    -> Vision.DLib.Types.RGBPixel.RGBPixel -> GHC.Types.IO ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Vision.DLib.Types.RGBPixel.$fStorableRGBPixel1
                  `cast`
                (<GHC.Ptr.Ptr Vision.DLib.Types.RGBPixel.RGBPixel>_R
                 ->_R <Vision.DLib.Types.RGBPixel.RGBPixel>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
fa19af4dd951530d462e288714478ff7
  $fStorableRGBPixel_$cpokeByteOff ::
    GHC.Ptr.Ptr b
    -> GHC.Types.Int
    -> Vision.DLib.Types.RGBPixel.RGBPixel
    -> GHC.Types.IO ()
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Vision.DLib.Types.RGBPixel.$fStorableRGBPixel3
                  `cast`
                (forall (b :: <*>_N).
                 <GHC.Ptr.Ptr b>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Vision.DLib.Types.RGBPixel.RGBPixel>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
fa19af4dd951530d462e288714478ff7
  $fStorableRGBPixel_$cpokeElemOff ::
    GHC.Ptr.Ptr Vision.DLib.Types.RGBPixel.RGBPixel
    -> GHC.Types.Int
    -> Vision.DLib.Types.RGBPixel.RGBPixel
    -> GHC.Types.IO ()
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Vision.DLib.Types.RGBPixel.$fStorableRGBPixel5
                  `cast`
                (<GHC.Ptr.Ptr Vision.DLib.Types.RGBPixel.RGBPixel>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Vision.DLib.Types.RGBPixel.RGBPixel>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
fa19af4dd951530d462e288714478ff7
  $fStorableRGBPixel_$csizeOf ::
    Vision.DLib.Types.RGBPixel.RGBPixel -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Vision.DLib.Types.RGBPixel.RGBPixel) ->
                 Vision.DLib.Types.RGBPixel.$fStorableRGBPixel7) -}
4a4376c8039c3b75e93099401ac94a82
  $tc'RGBPixel :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16286196499283151401##
                   13325657901142210168##
                   Vision.DLib.Types.RGBPixel.$trModule
                   Vision.DLib.Types.RGBPixel.$tc'RGBPixel1) -}
3aa8f2fb5dc59a5c941820a0d1ef4de9
  $tc'RGBPixel1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'RGBPixel"#) -}
acecf79882eabd7ff254124fc1dc15d8
  $tcRGBPixel :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1563084833169540812##
                   6277881760303805129##
                   Vision.DLib.Types.RGBPixel.$trModule
                   Vision.DLib.Types.RGBPixel.$tcRGBPixel1) -}
1864f506f40ece9e3ec8ffb426666c95
  $tcRGBPixel1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "RGBPixel"#) -}
d348e8d5cec8c67ed04cb25c32adb933
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Vision.DLib.Types.RGBPixel.$trModule2
                   Vision.DLib.Types.RGBPixel.$trModule1) -}
b826e9f7bb674242f6567e6a2fabac98
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Vision.DLib.Types.RGBPixel"#) -}
2496d5f941aa9c6f61bfd945316292cf
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "haskell-dlib-0.1.0.0-3fllyVSnE7s1R7uPGXF8Jy"#) -}
64cadd5bdb0ddfc2b6da30ed338fd32b
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Foreign.C.Types.CChar
    -> Foreign.C.Types.CChar
    -> Foreign.C.Types.CChar
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Foreign.C.Types.CChar)
                   (ww2 :: Foreign.C.Types.CChar)
                   (ww3 :: Foreign.C.Types.CChar)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Vision.DLib.Types.RGBPixel.$fShowRGBPixel7
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Vision.DLib.Types.RGBPixel.$fShowRGBPixel6
                          (case ww1
                                  `cast`
                                (UnsafeCo representational Foreign.C.Types.CChar GHC.Int.Int8) of wild { GHC.Int.I8# x# ->
                           case GHC.Show.$wshowSignedInt
                                  0#
                                  x#
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     Vision.DLib.Types.RGBPixel.$fShowRGBPixel5
                                     (GHC.Base.++
                                        @ GHC.Types.Char
                                        Vision.DLib.Types.RGBPixel.$fShowRGBPixel4
                                        (case ww2
                                                `cast`
                                              (UnsafeCo representational Foreign.C.Types.CChar GHC.Int.Int8) of wild1 { GHC.Int.I8# x#1 ->
                                         case GHC.Show.$wshowSignedInt
                                                0#
                                                x#1
                                                (GHC.Base.++
                                                   @ GHC.Types.Char
                                                   Vision.DLib.Types.RGBPixel.$fShowRGBPixel5
                                                   (GHC.Base.++
                                                      @ GHC.Types.Char
                                                      Vision.DLib.Types.RGBPixel.$fShowRGBPixel3
                                                      (case ww3
                                                              `cast`
                                                            (UnsafeCo representational Foreign.C.Types.CChar GHC.Int.Int8) of wild2 { GHC.Int.I8# x#2 ->
                                                       case GHC.Show.$wshowSignedInt
                                                              0#
                                                              x#2
                                                              (GHC.Base.++
                                                                 @ GHC.Types.Char
                                                                 Vision.DLib.Types.RGBPixel.$fShowRGBPixel2
                                                                 x) of ww4 { (#,#) ww5 ww6 ->
                                                       GHC.Types.:
                                                         @ GHC.Types.Char
                                                         ww5
                                                         ww6 } }))) of ww4 { (#,#) ww5 ww6 ->
                                         GHC.Types.:
                                           @ GHC.Types.Char
                                           ww5
                                           ww6 } }))) of ww4 { (#,#) ww5 ww6 ->
                           GHC.Types.: @ GHC.Types.Char ww5 ww6 } }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w)) }) -}
fa19af4dd951530d462e288714478ff7
  data RGBPixel
    = RGBPixel {rgbRed :: Foreign.C.Types.CChar,
                rgbGreen :: Foreign.C.Types.CChar,
                rgbBlue :: Foreign.C.Types.CChar}
ca2a346b28ad8c5507c396c1b9e6df89
  rgbBlue ::
    Vision.DLib.Types.RGBPixel.RGBPixel -> Foreign.C.Types.CChar
  RecSel Left Vision.DLib.Types.RGBPixel.RGBPixel
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Vision.DLib.Types.RGBPixel.RGBPixel) ->
                 case ds of wild { Vision.DLib.Types.RGBPixel.RGBPixel ds1 ds2 ds3 ->
                 ds3 }) -}
79adf61f54d7bca52c220713ff9390d0
  rgbGreen ::
    Vision.DLib.Types.RGBPixel.RGBPixel -> Foreign.C.Types.CChar
  RecSel Left Vision.DLib.Types.RGBPixel.RGBPixel
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Vision.DLib.Types.RGBPixel.RGBPixel) ->
                 case ds of wild { Vision.DLib.Types.RGBPixel.RGBPixel ds1 ds2 ds3 ->
                 ds2 }) -}
4403a47b2f579f27c7627484050385d9
  rgbRed ::
    Vision.DLib.Types.RGBPixel.RGBPixel -> Foreign.C.Types.CChar
  RecSel Left Vision.DLib.Types.RGBPixel.RGBPixel
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Vision.DLib.Types.RGBPixel.RGBPixel) ->
                 case ds of wild { Vision.DLib.Types.RGBPixel.RGBPixel ds1 ds2 ds3 ->
                 ds1 }) -}
instance [safe] GHC.Show.Show [Vision.DLib.Types.RGBPixel.RGBPixel]
  = Vision.DLib.Types.RGBPixel.$fShowRGBPixel
instance [safe] Foreign.Storable.Storable [Vision.DLib.Types.RGBPixel.RGBPixel]
  = Vision.DLib.Types.RGBPixel.$fStorableRGBPixel
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

